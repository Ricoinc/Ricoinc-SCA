{
  "_args": [
    [
      {
        "raw": "gulp-mustache@~2.0.1",
        "scope": null,
        "escapedName": "gulp-mustache",
        "name": "gulp-mustache",
        "rawSpec": "~2.0.1",
        "spec": ">=2.0.1 <2.1.0",
        "type": "range"
      },
      "/Users/sergioarce/Documents/SuiteCommerce Advanced Kilimanjaro/gulp/library/sc5-styleguide"
    ]
  ],
  "_from": "gulp-mustache@>=2.0.1 <2.1.0",
  "_id": "gulp-mustache@2.0.2",
  "_inCache": true,
  "_location": "/gulp-mustache",
  "_nodeVersion": "4.2.1",
  "_npmUser": {
    "name": "rogeriopvl",
    "email": "rogeriopvl@gmail.com"
  },
  "_npmVersion": "2.14.7",
  "_phantomChildren": {
    "beeper": "1.1.1",
    "chalk": "1.1.3",
    "clone": "1.0.3",
    "clone-stats": "0.0.1",
    "core-util-is": "1.0.2",
    "dateformat": "1.0.12",
    "fancy-log": "1.3.2",
    "gulplog": "1.0.0",
    "has-gulplog": "0.1.0",
    "inherits": "2.0.3",
    "lodash._basecopy": "3.0.1",
    "lodash._basetostring": "3.0.1",
    "lodash._basevalues": "3.0.0",
    "lodash._getnative": "3.9.1",
    "lodash._isiterateecall": "3.0.9",
    "lodash._reescape": "3.0.0",
    "lodash._reevaluate": "3.0.0",
    "lodash._root": "3.0.1",
    "lodash.isarguments": "3.1.0",
    "lodash.isarray": "3.0.4",
    "lodash.restparam": "3.6.1",
    "multipipe": "0.1.2",
    "replace-ext": "0.0.1",
    "string_decoder": "0.10.31",
    "util-deprecate": "1.0.2"
  },
  "_requested": {
    "raw": "gulp-mustache@~2.0.1",
    "scope": null,
    "escapedName": "gulp-mustache",
    "name": "gulp-mustache",
    "rawSpec": "~2.0.1",
    "spec": ">=2.0.1 <2.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sc5-styleguide"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-mustache/-/gulp-mustache-2.0.2.tgz",
  "_shasum": "c0cff67a9840e2ba376a4c3ed3260bd16d2ad23d",
  "_shrinkwrap": null,
  "_spec": "gulp-mustache@~2.0.1",
  "_where": "/Users/sergioarce/Documents/SuiteCommerce Advanced Kilimanjaro/gulp/library/sc5-styleguide",
  "author": {
    "name": "RogÃ©rio Vicente",
    "url": "https://github.com/rogeriopvl"
  },
  "bugs": {
    "url": "https://github.com/rogeriopvl/gulp-mustache/issues"
  },
  "dependencies": {
    "gulp-util": "3.0.7",
    "mustache": "2.2.0",
    "through2": "2.0.0"
  },
  "description": "A plugin for Gulp that renders mustache templates into html",
  "devDependencies": {
    "mocha": "2.3.4",
    "should": "7.1.1"
  },
  "directories": {},
  "dist": {
    "shasum": "c0cff67a9840e2ba376a4c3ed3260bd16d2ad23d",
    "tarball": "https://registry.npmjs.org/gulp-mustache/-/gulp-mustache-2.0.2.tgz"
  },
  "engines": {
    "npm": ">=1.2.10"
  },
  "gitHead": "0b6a252abcceb3dbc62900d7bb06c13da95ce4e0",
  "homepage": "https://github.com/rogeriopvl/gulp-mustache",
  "keywords": [
    "gulpplugin",
    "gulp",
    "mustache"
  ],
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "main": "./index.js",
  "maintainers": [
    {
      "name": "rogeriopvl",
      "email": "rogeriopvl@gmail.com"
    }
  ],
  "name": "gulp-mustache",
  "optionalDependencies": {},
  "readme": "# gulp-mustache [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][depstat-image]][depstat-url]\n\n> mustache plugin for [gulp](https://github.com/wearefractal/gulp)\n\n## Usage\n\nFirst, install `gulp-mustache` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-mustache\n```\n\nThen, add it to your `gulpfile.js`:\n\n```javascript\nvar mustache = require(\"gulp-mustache\");\n\ngulp.src(\"./templates/*.mustache\")\n\t.pipe(mustache({\n\t\tmsg: \"Hello Gulp!\"\n\t}))\n\t.pipe(gulp.dest(\"./dist\"));\n```\n\nYou may also pass in an object representing mustache partials and their contents\nas a third argument to the call to `mustache()` like so:\n\n```javascript\ngulp.src(\"./templates/*.mustache\")\n\t.pipe(mustache({\n\t\tmsg: \"Hello Gulp!\",\n\t\tnested_value: \"I am nested.\",\n\t\tanother_value: \"1 2 3\"\n\t},{},{\n\t\tsome_inner_partial: \"<p>{{nested_value}}</p>\",\n\t\tanother_partial: \"<div>{{another_value}}</div>\"\n\t})).pipe(gulp.dest(\"./dist\"));\n```\n\n## Partials loaded from disk\n\n[Mustache partials](https://mustache.github.io/mustache.5.html#Partials) not given in the `partials` argument will be loaded from disk, relative from the file currently being processed:\n\n```\n{{> ../partials/head }}\n```\n\nThis will find a `head.mustache` in the partials directory next to the current file's directory. Partials loading is recursive.\n\n## API\n\n### mustache(view, options, partials)\n\n#### view\nType: `hash` or `string`\nDefault: `undefined`\n\nThe view object, containing all template variables as keys. If you pass a `string` it will be used as the path to a JSON file containing view variables.\n\nAs of `v1.0.1`, `file.data` is supported as a way of passing data into mustache. See [this](https://github.com/colynb/gulp-data#note-to-gulp-plugin-authors).\n\n#### options\nType: `hash`\nDefault: `{ }`\n\nThe options object to configure the plugin.\n\n##### options.extension\nType: `string`\nDefault: the extension of the current file\n\n#### partials\nType: `hash`\nDefault: `{ }`\n\nAn optional object of mustache partial strings. See [mustache.js](https://github.com/janl/mustache.js/) for details on partials in mustache.\n\n## License\n\n[MIT License](http://en.wikipedia.org/wiki/MIT_License)\n\n[npm-url]: https://npmjs.org/package/gulp-mustache\n[npm-image]: https://badge.fury.io/js/gulp-mustache.png\n\n[travis-url]: http://travis-ci.org/rogeriopvl/gulp-mustache\n[travis-image]: https://secure.travis-ci.org/rogeriopvl/gulp-mustache.png?branch=master\n\n[depstat-url]: https://david-dm.org/rogeriopvl/gulp-mustache\n[depstat-image]: https://david-dm.org/rogeriopvl/gulp-mustache.png\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/rogeriopvl/gulp-mustache.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "2.0.2"
}
