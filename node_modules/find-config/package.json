{
  "_args": [
    [
      {
        "raw": "find-config@0.3.0",
        "scope": null,
        "escapedName": "find-config",
        "name": "find-config",
        "rawSpec": "0.3.0",
        "spec": "0.3.0",
        "type": "version"
      },
      "/Users/sergioarce/Documents/SuiteCommerce Advanced Kilimanjaro/node_modules/cssfmt"
    ]
  ],
  "_from": "find-config@0.3.0",
  "_id": "find-config@0.3.0",
  "_inCache": true,
  "_location": "/find-config",
  "_nodeVersion": "0.12.2",
  "_npmUser": {
    "name": "shannonmoeller",
    "email": "me@shannonmoeller.com"
  },
  "_npmVersion": "2.7.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "find-config@0.3.0",
    "scope": null,
    "escapedName": "find-config",
    "name": "find-config",
    "rawSpec": "0.3.0",
    "spec": "0.3.0",
    "type": "version"
  },
  "_requiredBy": [
    "/cssfmt"
  ],
  "_resolved": "https://registry.npmjs.org/find-config/-/find-config-0.3.0.tgz",
  "_shasum": "c4f6b2ae491b2cae3ca8af72401f1ad84cfdd0d9",
  "_shrinkwrap": null,
  "_spec": "find-config@0.3.0",
  "_where": "/Users/sergioarce/Documents/SuiteCommerce Advanced Kilimanjaro/node_modules/cssfmt",
  "author": {
    "name": "Shannon Moeller",
    "email": "me@shannonmoeller.com",
    "url": "http://shannonmoeller.com"
  },
  "bugs": {
    "url": "https://github.com/shannonmoeller/find-config/issues"
  },
  "dependencies": {
    "user-home": "^1.1.1"
  },
  "description": "Find the first config file matching a given name in the current directory or the nearest ancestor directory.",
  "devDependencies": {
    "benchmark": "^1.0.0",
    "coveralls": "^2.11.2",
    "expect": "^1.6.0",
    "findup-sync": "^0.2.1",
    "gulp": "^3.8.11",
    "gulp-eslint": "^0.11.1",
    "gulp-istanbul": "^0.8.1",
    "gulp-jscs": "^1.5.2",
    "gulp-jshint": "^1.10.0",
    "gulp-mocha": "^2.0.1",
    "jshint-stylish": "^1.0.1",
    "look-up": "^0.7.1",
    "microtime": "^1.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c4f6b2ae491b2cae3ca8af72401f1ad84cfdd0d9",
    "tarball": "https://registry.npmjs.org/find-config/-/find-config-0.3.0.tgz"
  },
  "gitHead": "e4cb239f8ae5e35145a10c179ec6c69c92c64f58",
  "homepage": "https://github.com/shannonmoeller/find-config",
  "keywords": [
    "config",
    "dot",
    "rc",
    "file",
    "find",
    "glob",
    "xdg"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "shannonmoeller",
      "email": "me@shannonmoeller.com"
    }
  ],
  "name": "find-config",
  "optionalDependencies": {},
  "readme": "# `find-config`\n\n[![NPM version][npm-img]][npm-url] [![Downloads][downloads-img]][npm-url] [![Build Status][travis-img]][travis-url] [![Coverage Status][coveralls-img]][coveralls-url] [![Chat][gitter-img]][gitter-url]\n\nFinds the first matching config file, if any, in the current directory, nearest ancestor, or user's home directory. Supports finding files within a subdirectory of an ancestor directory. Configurable with defaults set to support the [XDG Base Directory Specification][xdg] for configuration files.\n\nBecause this module is intended to find consistently named configuration files, it is case-sensitive and does not support globs. If you need a more generic solution, see [findup-sync][fus] or [look-up][lku].\n\n[fus]: https://www.npmjs.com/package/findup-sync\n[lku]: https://www.npmjs.com/package/look-up\n[xdg]: http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html\n\n## Algorithm\n\nWhere X is the current directory:\n\n1. If X/file.ext exists, return it. STOP\n2. If X/.dir/file.ext exists, return it. STOP\n3. If X has a parent directory, change X to parent. GO TO 1\n4. Return NULL.\n\n## Install\n\nWith [Node.js](http://nodejs.org):\n\n    $ npm install find-config\n\n## Api\n\n### `findConfig(filename, [options]) : String|Null`\n\n- `filename` `String` - Name of the configuration file to find.\n- `options` `{Object=}`\n  - `cwd` `{String=}` - Directory in which to start looking. (Default: `process.cwd()`)\n  - `dir` `{String=}` - An optional subdirectory to check at each level. (Default: `'.config'`)\n  - `dot` `{Boolean=}` - Whether to keep the leading dot in the filename in `dir`. (Default: `false`)\n  - `home` `{Boolean=}` - Whether to also check the user's home directory. (Default: `true`)\n  - `module` `{Boolean=}` - Whether to use Node.js [module resolution][modres]. (Default: `false`)\n\nSynchronously find the first config file matching a given name in the current directory or the nearest ancestor directory.\n\n[modres]: https://nodejs.org/api/modules.html#modules_all_together\n\n```js\nvar findConfig = require('find-config');\n\n// Find the nearest `package.json`\nvar pkg = findConfig('package.json');\n\n// Find the nearest `.foorc` or `.config/foorc`\nvar foo = findConfig('.foorc');\n\n// Find the nearest `.foorc` or `.config/.foorc`\nvar foo = findConfig('.foorc', { dot: true });\n\n// Find the nearest module using Node.js module resolution.\n// Will look for `bar.js` or `bar/index.js`, etc.\nvar foo = findConfig('bar', { module: true });\n\n// Find the nearest `baz.json` or `some/path/baz.json`\nvar foo = findConfig('baz.json', { dir: 'some/path' });\n\n// Find the nearest `qux.json` or `some/path/qux.json` in\n// some other directory or its nearest ancestor directory.\nvar foo = findConfig('qux.json', { cwd: '/other/dir', dir: 'some/path' });\n```\n\n### `findConfig.read(filename, [options]) : String|Null`\n\n- `filename` `String` - Name of the configuration file to find.\n- `options` `{Object=}` - Same as `findConfig()` with two additions.\n  - `encoding` `{String}` - File encoding. (Default: `'utf8'`).\n  - `flag` `{String}` - Flag. (Default: `'r'`).\n\nFinds and reads the first matching config file, if any.\n\n```js\nvar yaml = require('js-yaml');\nvar travis = yaml.safeLoad(findConfig.read('.travis.yml'));\n```\n\n### `findConfig.require(filename, [options]) : *`\n\n- `filename` `String` - Name of the configuration file to find.\n- `options` `{Object=}` - Same as `findConfig()`.\n\nFinds and requires the first matching config file, if any. Implies `module` is `true`.\n\n```js\nvar version = findConfig.require('package.json').version;\n```\n\n## Contribute\n\n[![Tasks][waffle-img]][waffle-url] [![Tip][gittip-img]][gittip-url]\n\nStandards for this project, including tests, code coverage, and semantics are enforced with a build tool. Pull requests must include passing tests with 100% code coverage and no linting errors.\n\n## Test\n\n    $ npm test\n\n----\n\nÂ© 2015 Shannon Moeller <me@shannonmoeller.com>\n\nLicensed under [MIT](http://shannonmoeller.com/mit.txt)\n\n[coveralls-img]: http://img.shields.io/coveralls/shannonmoeller/find-config/master.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/shannonmoeller/find-config\n[downloads-img]: http://img.shields.io/npm/dm/find-config.svg?style=flat-square\n[gitter-img]:    http://img.shields.io/badge/gitter-join_chat-1dce73.svg?style=flat-square\n[gitter-url]:    https://gitter.im/shannonmoeller/shannonmoeller\n[gittip-img]:    http://img.shields.io/gittip/shannonmoeller.svg?style=flat-square\n[gittip-url]:    https://www.gittip.com/shannonmoeller\n[npm-img]:       http://img.shields.io/npm/v/find-config.svg?style=flat-square\n[npm-url]:       https://npmjs.org/package/find-config\n[travis-img]:    http://img.shields.io/travis/shannonmoeller/find-config.svg?style=flat-square\n[travis-url]:    https://travis-ci.org/shannonmoeller/find-config\n[waffle-img]:    http://img.shields.io/github/issues/shannonmoeller/find-config.svg?style=flat-square\n[waffle-url]:    http://waffle.io/shannonmoeller/find-config\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shannonmoeller/find-config.git"
  },
  "scripts": {
    "coveralls": "cat ./coverage/lcov.info | coveralls",
    "test": "gulp test"
  },
  "version": "0.3.0"
}
